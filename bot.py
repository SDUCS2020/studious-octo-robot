import asyncio
from aiogram import Bot, Dispatcher, Router, types, F
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
from aiogram.filters import Command
from aiogram.utils.keyboard import InlineKeyboardBuilder
from datetime import datetime, timedelta
import re 

API_TOKEN = "7887018266:AAGRbb6aY7zdu8N5Qfs2jEGFj6B8ggdzIm8"
ADMIN_CHANNEL_ID = "-1002426086208" 
CHANNEL_ID_1 = -1002285726390  
CHANNEL_ID_2 = -1002153450146 
CHANNEL_ID_3 = -1001584398072
subscriptions = {}

bot = Bot(token=API_TOKEN)
dp = Dispatcher()
router = Router()
dp.include_router(router)  

main_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ö—É–ø–∏—Ç—å Premium –∏–ª–∏ Premium + –ö–û–¢")],
        [KeyboardButton(text="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ PREMIUM üçé")],
        [KeyboardButton(text="–í–æ–ø—Ä–æ—Å-–û—Ç–≤–µ—Ç"), KeyboardButton(text="–û—Ç–∑—ã–≤—ã")],
        [KeyboardButton(text="–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É")],
    ],
    resize_keyboard=True
)

info_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ö—É–ø–∏—Ç—å Premium –∏–ª–∏ Premium + –ö–û–¢")],
        [KeyboardButton(text="–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç")],
        [KeyboardButton(text="–ù–∞–∑–∞–¥")],
    ],
    resize_keyboard=True
)

qa_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–°–º–æ–≥—É –ª–∏ —è –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω–∞, —á—Ç–æ –¥–µ–ª–∞—é —Å–∞–º–æ–º–∞—Å—Å–∞–∂ –∏–ª–∏ —Ç–µ–π–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏ –Ω–µ –ø—Ä–∏–Ω–µ—Å—É –≤—Ä–µ–¥?")],
        [KeyboardButton(text="–í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–º–æ—á—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–∞–≤ —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤—ã–±–æ—Ä–∞ –º–æ–µ–≥–æ –¥–æ–º–∞—à–Ω–µ–≥–æ —É—Ö–æ–¥–∞?")],
        [KeyboardButton(text="–ó–∞—á–µ–º –º–Ω–µ –±—Ä–∞—Ç—å –ú–æ–ª–æ–¥–∏–ª—å–Ω—ã–π –±–æ—Ç PREMIUM –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –π–æ–≥–∞ –≤ –∫–ª—É–±–µ –ö–û–¢?")],
        [KeyboardButton(text="–ù–∞–∑–∞–¥")],
    ],
    resize_keyboard=True
)

@router.message(Command("start"))
async def start_command(message: types.Message):
    await message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ú–æ–ª–æ–¥–∏–ª—å–Ω—ã–π –±–æ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=main_menu)

@router.message(lambda message: message.text == "üçé–ö—É–ø–∏—Ç—å PREMIUM –≤ –ú–æ–ª–æ–¥–∏–ª—å–Ω–æ–º –±–æ—Ç–µüçé")
async def premium_info(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—Éüëá", reply_markup=info_menu)

@router.message(lambda message: message.text == "–ù–∞–ø–∏—Å–∞—Ç—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É")
async def premium_info(message: types.Message):
     text = (
        "–î–¥—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µüëá:\n\n"
        "@poddergkako\n\n"
     )

     await message.answer(text)

@router.message(lambda message: message.text == "–ö—É–ø–∏—Ç—å Premium –∏–ª–∏ Premium + –ö–û–¢")
async def payment_info(message: types.Message):
    text = (
        "1. –í—ã–±–∏—Ä–∞–π—Ç–µ –ø–µ—Ä–∏–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –æ–ø–ª–∞—á–∏–≤–∞–π—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Å—É–º–º—É\n\n"
        "–¢–∞—Ä–∏—Ñ—ã –Ω–∞ PREMIUM-–¥–æ—Å—Ç—É–ø –≤ –ú–æ–ª–æ–¥–∏–ª—å–Ω—ã–π –±–æ—Çüçé:\n\n"
        "1 –º–µ—Å—è—Ü: 10$ ‚Äî 34,8 BYN / 27,5 GEL\n"
        "3 –º–µ—Å—è—Ü–∞: 27$ ‚Äî 93 BYN / 75 GEL\n"
        "6 –º–µ—Å—è—Ü–µ–≤: 50$ ‚Äî 174 BYN / 138 GEL\n"
        "12 –º–µ—Å—è—Ü–µ–≤: 90$ ‚Äî 313 BYN / 248 GEL\n\n"
        "–ü–∞–∫–µ—Ç—ã PREMIUM –ú–æ–ª–æ–¥–∏–ª—å–Ω—ã–π –±–æ—Çüçé + –ö–ª—É–± –ö–û–¢:\n\n"
        "1 –º–µ—Å—è—Ü: 15$ ‚Äî 52 BYN / 41,2 GEL\n"
        "3 –º–µ—Å—è—Ü–∞: 39$ ‚Äî 136 BYN / 108 GEL\n"
        "6 –º–µ—Å—è—Ü–µ–≤: 80$ ‚Äî 279 BYN / 220 GEL\n"
        "12 –º–µ—Å—è—Ü–µ–≤: 160$ ‚Äî 556,8 BYN / 440 GEL\n\n"
        "2. –û–ø–ª–∞—á–∏–≤–∞–π—Ç–µ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º\n\n"
        "üáßüáæ–ë–µ–ª–∞—Ä—É—Å—å:\n"
        "1Ô∏è‚É£ –ï–†–ò–ü: –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —É—Å–ª—É–≥–∏ ‚Üí –ë–∞–Ω–∫–∏ –ù–ö–§–û ‚Üí –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫ ‚Üí 375256719780\n"
        "2Ô∏è‚É£ –° –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫ –ë–µ–ª–∞—Ä—É—Å–∏ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞: 375256719780\n"
        "3Ô∏è‚É£ –ü–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã: 9112 3880 0196 1148 (Ivan Karalko)\n\n"
        "üåç –î–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω:\n"
        "1Ô∏è‚É£ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞ –ì—Ä—É–∑–∏–∏ (TBC): 4315 7140 1661 1277 (Ivan Karalko)\n"
        "IBAN: GE92TB7398345064400010\n\n"
        "üíπ –ö—Ä–∏–ø—Ç–∞:\n"
        "USDT (TRC-20): TYnFwyLqhxfrwgjNpw5A9ANXKpLLCtcQYm\n"
        "Bybit UID: 15786723\n\n"
        "3. üì§ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ \"–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç\" –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç.\n"
        "–î–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Å—Ä–∞–∑—É –∏–ª–∏ –¥–æ 3 —á–∞—Å–æ–≤ –ø–æ—Å–ª–µ."
    )

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç", callback_data="upload_screenshot")],
            [InlineKeyboardButton(text="–ó–∞–∫—Ä—ã—Ç—å", callback_data="close")]
        ]
    )

    await message.answer(text, reply_markup=keyboard)

@router.callback_query(lambda callback: callback.data == "upload_screenshot")
async def handle_upload_screenshot(callback: CallbackQuery):
    await callback.message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç.")
    await callback.answer()

@router.callback_query(lambda callback: callback.data == "close")
async def handle_close(callback: CallbackQuery):
    await callback.message.delete()  
    await callback.answer()  

@router.message(lambda message: message.text == "–í–æ–ø—Ä–æ—Å-–û—Ç–≤–µ—Ç")
async def faq(message: types.Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –≤–æ–ø—Ä–æ—Å:", reply_markup=qa_menu)

@router.message(lambda message: message.text == "–°–º–æ–≥—É –ª–∏ —è –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω–∞, —á—Ç–æ –¥–µ–ª–∞—é —Å–∞–º–æ–º–∞—Å—Å–∞–∂ –∏–ª–∏ —Ç–µ–π–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏ –Ω–µ –ø—Ä–∏–Ω–µ—Å—É –≤—Ä–µ–¥?")
async def qa_1(message: types.Message):
    text = (
        "–í—ã —Ç–æ—á–Ω–æ –Ω–µ –Ω–∞–≤—Ä–µ–¥–∏—Ç–µ —Å–µ–±–µ –∏ –±—É–¥–µ—Ç–µ –≤—ã–ø–æ–ª–Ω—è—Ç—å —Ç–µ—Ö–Ω–∏–∫—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –ø–æ—Ç–æ–º—É —á—Ç–æ –≤—Å–µ —É—Ä–æ–∫–∏ –∑–∞–ø–∏—Å–∞–Ω—ã "
        "–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–æ –∏ –ø–æ–¥—Ä–æ–±–Ω–æ. –í—ã —Ç–∞–∫–∂–µ —Å–º–æ–∂–µ—Ç–µ —Å–Ω—è—Ç—å –≤–∏–¥–µ–æ –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –µ–≥–æ –≤ —á–∞—Ç —Å–æ –º–Ω–æ–π, —á—Ç–æ–±—ã —è "
        "–ª–∏—á–Ω–æ –ø—Ä–æ–≤–µ—Ä–∏–ª —Ç–µ—Ö–Ω–∏–∫—É. –≠—Ç–æ –∫–∞—Å–∞–µ—Ç—Å—è –∏ —Ç–µ–π–ø–∏—Ä–æ–≤–∞–Ω–∏—è."
    )
    await message.answer(text)

@router.message(lambda message: message.text == "–í—ã —Å–º–æ–∂–µ—Ç–µ –ø–æ–º–æ—á—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–∞–≤ —Å—Ä–µ–¥—Å—Ç–≤–∞ –∏–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤—ã–±–æ—Ä–∞ –º–æ–µ–≥–æ –¥–æ–º–∞—à–Ω–µ–≥–æ —É—Ö–æ–¥–∞?")
async def qa_2(message: types.Message):
    text = (
        "–î–∞, –ò–≤–∞–Ω –ª–∏—á–Ω–æ –±—É–¥–µ—Ç –≤ Telegram-—á–∞—Ç–µ, –≥–¥–µ –≤—ã —Å–º–æ–∂–µ—Ç–µ –∑–∞–¥–∞—Ç—å –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –∏ –±—ã—Ç—å —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ "
        "–≤—Å–µ –¥–µ–ª–∞–µ—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ."
    )
    await message.answer(text)

@router.message(lambda message: message.text == "–ó–∞—á–µ–º –º–Ω–µ –±—Ä–∞—Ç—å –ú–æ–ª–æ–¥–∏–ª—å–Ω—ã–π –±–æ—Ç PREMIUM –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –π–æ–≥–∞ –≤ –∫–ª—É–±–µ –ö–û–¢?")
async def qa_3(message: types.Message):
    text = (
        "–†–∞–±–æ—Ç–∞ —Å –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ ‚Äî —ç—Ç–æ –Ω–µ —Ç–æ–ª—å–∫–æ —É—Ö–æ–¥ –∑–∞ –ª–∏—Ü–æ–º, –Ω–æ –∏ –ø—Ä–æ—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ–≥–æ —Ç–µ–ª–∞. "
        "–ö–∞–∂–¥—ã–π –∑–Ω–∞–µ—Ç, —á—Ç–æ –¥–ª—è —Ö–æ—Ä–æ—à–µ–≥–æ —Å–∞–º–æ—á—É–≤—Å—Ç–≤–∏—è –∏ —Ñ–∏–≥—É—Ä—ã –≤–∞–∂–Ω–æ –∑–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–ø–æ—Ä—Ç–æ–º. "
        "–†–∞–Ω—å—à–µ —è —Ö–æ–¥–∏–ª –≤ —Ç—Ä–µ–Ω–∞–∂–µ—Ä–Ω—ã–π –∑–∞–ª, –Ω–æ –æ–¥–Ω–∞–∂–¥—ã –ø–æ–ø—Ä–æ–±–æ–≤–∞–ª –π–æ–≥—É —Å –°–∞–±–∏–Ω–æ–π (—Ç—Ä–µ–Ω–µ—Ä–æ–º –∫–ª—É–±–∞ –ö–û–¢ –∏ –º–æ–µ–π –∂–µ–Ω–æ–π) ‚Äî "
        "—Ç–µ–ø–µ—Ä—å —è —Ç—Ä–µ–Ω–∏—Ä—É—é—Å—å —Ç–æ–ª—å–∫–æ –ø–æ –µ–µ —É—Ä–æ–∫–∞–º. –ö–ª—É–± –ö–û–¢ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Ä–µ—à–∞–µ—Ç –≤–æ–ø—Ä–æ—Å –∑–∞–Ω—è—Ç–∏–π —Å–ø–æ—Ä—Ç–æ–º: –≤—Å–µ, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ, "
        "‚Äî —ç—Ç–æ –∫–æ–≤—Ä–∏–∫, 20‚Äì60 –º–∏–Ω—É—Ç –≤—Ä–µ–º–µ–Ω–∏ –∏ –≤—Å–µ–≥–æ 10$ –≤ –º–µ—Å—è—Ü."
    )
    await message.answer(text)

@router.message(lambda message: message.text == "–ù–∞–∑–∞–¥")
async def go_back(message: types.Message):
    await message.answer("–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu)

premium_club_menu = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="PREMIUM-–¥–æ—Å—Ç—É–ø üçé")],
        [KeyboardButton(text="–ö–ª—É–± –ö–û–¢ üå∞")],
        [KeyboardButton(text="–°—Ç–æ–∏–º–æ—Å—Ç—å/–æ–ø–ª–∞—Ç–∞")],
        [KeyboardButton(text="–ù–∞–∑–∞–¥")],
    ],
    resize_keyboard=True
)

@router.message(lambda message: message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ PREMIUM üçé")
async def buy_premium(message: types.Message):
    await message.answer(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:",
        reply_markup=premium_club_menu
    )

@router.message(lambda message: message.text == "PREMIUM-–¥–æ—Å—Ç—É–ø üçé")
async def premium_access(message: types.Message):
    text = (
        "–ó–∞ 10$ –≤ –º–µ—Å—è—Ü –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ:\n"
        " ‚Ä¢ –ö—É—Ä—Å Instaskin (20+ —É—Ä–æ–∫–æ–≤): –ø–æ–¥–±–æ—Ä —É—Ö–æ–¥–∞, —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π —Å–∞–º–æ–º–∞—Å—Å–∞–∂, —Ç–µ—Ö–Ω–∏–∫–∏ –±—É–∫–∫–∞–ª—å–Ω–æ–≥–æ –º–∞—Å—Å–∞–∂–∞ –∏ –≥—É–∞—à–∞.\n"
        " ‚Ä¢ –ö—É—Ä—Å —Å–∞–º–æ—Ç–µ–π–ø–∏—Ä–æ–≤–∞–Ω–∏—è: –±–æ—Ä—å–±–∞ —Å –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–º–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ –∏ —Å–ø–∞–∑–º–∞–º–∏ –º—ã—à—Ü.\n"
        " ‚Ä¢ –ß–∞—Ç –¥–ª—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π –≥–¥–µ –æ—Ç–≤–µ—á–∞–µ—Ç –ª–∏—á–Ω–æ –ò–≤–∞–Ω –ö–æ—Ä–æ–ª—å–∫–æ: –ø–æ–º–æ–≥–∞–µ—Ç –≤ –ø–æ–¥–±–æ—Ä–µ —Å—Ä–µ–¥—Å—Ç–≤, –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–µ—Ö–Ω–∏–∫ —Å–∞–º–æ–º–∞—Å—Å–∞–∂–∞ –∏–ª–∏ —Ç–µ–π–ø–∏—Ä–æ–≤–∞–Ω–∏—è.\n\n"
        "–ü—Ä–∏ –æ–ø–ª–∞—Ç–µ –Ω–∞ –±–æ–ª–µ–µ –¥–æ–ª–≥–∏–π —Å—Ä–æ–∫ –µ—â—ë –≤—ã–≥–æ–¥–Ω–µ–µüëçüèΩ\n"
        "1 –º–µ—Å—è—Ü: 10$ ‚Äî 34,8 BYN / 27,5 GEL\n"
        "3 –º–µ—Å—è—Ü–∞: 27$ ‚Äî 93 BYN / 75 GEL\n"
        "6 –º–µ—Å—è—Ü–µ–≤: 50$ ‚Äî 174 BYN / 138 GEL\n"
        "12 –º–µ—Å—è—Ü–µ–≤: 90$ ‚Äî 313 BYN / 248 GEL\n\n"
        "–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —É—Å–ª–æ–≤–∏—è, –µ—Å–ª–∏ –ø—Ä–∏–æ–±—Ä–µ—Ç–∞–µ—Ç–µ —Å PREMIUM –µ—â—ë –∫–ª—É–± –ö–û–¢, —Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º–∏ —Å–∏–ª–æ–≤–æ–π –π–æ–≥–∏. –ü–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ –ö–û–¢ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µüëá:\n\n"
        "–ü–∞–∫–µ—Ç—ã PREMIUM –ú–æ–ª–æ–¥–∏–ª—å–Ω—ã–π –±–æ—Çüçé + –ö–ª—É–± –ö–û–¢:\n\n"
        "1 –º–µ—Å—è—Ü: 15$ ‚Äî 52 BYN / 41,2 GEL\n"
        "3 –º–µ—Å—è—Ü–∞: 39$ ‚Äî 136 BYN / 108 GEL\n"
        "6 –º–µ—Å—è—Ü–µ–≤: 80$ ‚Äî 279 BYN / 220 GEL\n"
        "12 –º–µ—Å—è—Ü–µ–≤: 160$ ‚Äî 556,8 BYN / 440 GEL\n"
    )

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ –ø—Ä–æ –ö–û–¢", callback_data="kot_club")],
            [InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∏—Ç—å", callback_data="payment")]
        ]
    )

    await message.answer(text, reply_markup=keyboard, parse_mode="Markdown")

@router.callback_query(lambda callback: callback.data == "kot_club")
async def kot_club_handler(callback: types.CallbackQuery):
    text = (
        "–ö–ª—É–± –ö–û–¢ - —ç—Ç–æ —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–∞ –≤—Å–µ —Ç–µ–ª–æ –∏ –ª–µ–∫—Ü–∏—è–º–∏ –ø—Ä–æ –∑–¥–æ—Ä–æ–≤—å–µ –∏ –ø–∏—Ç–∞–Ω–∏–µ. –ö–û–¢ –∑–∞–∫—Ä–æ–µ—Ç –≤—Å–µ —Ç–≤–æ–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –≤ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∏–º–µ—Ç—å —Å–µ–∫—Å—É–∞–ª—å–Ω–æ–µ –∏ –∑–¥–æ—Ä–æ–≤–æ–µ —Ç–µ–ª–æ –≤ –ª—é–±–æ–º –≤–æ–∑—Ä–∞—Å—Ç–µ, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Å–∞–Ω–∫—É –∏ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –≥–æ—Ä–∞–∑–¥–æ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–∏.\n"
        "–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç?\n"
        "‚Ä¢ 3 —Å–∏–ª–æ–≤—ã–µ –π–æ–≥–∏ –≤ –Ω–µ–¥–µ–ª—é –≤ –ø—Ä—è–º–æ–º —ç—Ñ–∏—Ä–µ.\n"
        "‚Ä¢ –ó–∞–ø–∏—Å–∏ –≤—Å–µ—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –æ—Å—Ç–∞—é—Ç—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞ –≤ –∫–∞–Ω–∞–ª–µ. –¢–∞–º —É–∂–µ –±–æ–ª–µ–µ 73! —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≥–¥–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (15, 40, 60, 80 –º–∏–Ω—É—Ç), –∞ —Ç–∞–∫–∂–µ —É—Ä–æ–≤–Ω–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏ –∞–∫—Ü–µ–Ω—Ç –Ω–∞ –Ω–æ–≥–∏, –ø–æ–ø—É –∏ –ø—Ä–æ—á.\n"
        "‚Ä¢ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –∫–æ—Ä–æ—Ç–∫–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ (15‚Äì20 –º–∏–Ω).\n"
        "‚Ä¢ –õ–µ–∫—Ü–∏–∏: –ø–∏—Ç–∞–Ω–∏–µ, –ø–æ—Ö—É–¥–µ–Ω–∏–µ, —Ä–µ—Ü–µ–ø—Ç—ã, –¥–æ–±–∞–≤–∫–∏.\n"
        "‚Ä¢ –†–∞–∑–±–æ—Ä –∞–Ω–∞–ª–∏–∑–æ–≤ —Ä–∞–∑ –≤ –º–µ—Å—è—Ü.\n"
        "‚Ä¢ –ö–æ–º—å—é–Ω–∏—Ç–∏ –∂–µ–Ω—â–∏–Ω —Å üî• —ç–Ω–µ—Ä–≥–∏–µ–π.\n"
        "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ–≤–æ–¥–∏—Ç —Å–∞–º—ã–π –º–æ—â–Ω—ã–π –∏ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–π —Ç—Ä–µ–Ω–µ—Ä —É –∫–æ—Ç–æ—Ä–æ–≥–æ —è —Å–∞–º –∑–∞–Ω–∏–º–∞—é—Å—å - –°–∞–±–∏–Ω–∞üî•\n\n"

        "–¢–∞—Ä–∏—Ñ—ã –Ω–∞ PREMIUM –º–æ–ª–æ–¥–∏–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞üçé + –∫–ª—É–± –ö–û–¢\n\n"

        "1 –º–µ—Å—è—Ü: 15$ ‚Äî 52 BYN / 41,2 GEL\n"
        "3 –º–µ—Å—è—Ü–∞: 39$ ‚Äî 136 BYN / 108 GEL\n"
        "6 –º–µ—Å—è—Ü–µ–≤: 80$ ‚Äî 279 BYN / 220 GEL\n"
        "12 –º–µ—Å—è—Ü–µ–≤: 160$ ‚Äî 556,8 BYN / 440 GEL\n"
    )
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∏—Ç—å", callback_data="payment")]
        ]
    )

    await callback.message.answer(text, reply_markup=keyboard)

@router.callback_query(lambda callback: callback.data == "payment")
async def handle_payment(callback: CallbackQuery):
    text = (
        "1. –í—ã–±–∏—Ä–∞–π—Ç–µ –ø–µ—Ä–∏–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –æ–ø–ª–∞—á–∏–≤–∞–π—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Å—É–º–º—É\n\n"
        "–¢–∞—Ä–∏—Ñ—ã –Ω–∞ PREMIUM-–¥–æ—Å—Ç—É–ø –≤ –ú–æ–ª–æ–¥–∏–ª—å–Ω—ã–π –±–æ—Çüçé:\n\n"
        "1 –º–µ—Å—è—Ü: 10$ ‚Äî 34,8 BYN / 27,5 GEL\n"
        "3 –º–µ—Å—è—Ü–∞: 27$ ‚Äî 93 BYN / 75 GEL\n"
        "6 –º–µ—Å—è—Ü–µ–≤: 50$ ‚Äî 174 BYN / 138 GEL\n"
        "12 –º–µ—Å—è—Ü–µ–≤: 90$ ‚Äî 313 BYN / 248 GEL\n\n"
        "–ü–∞–∫–µ—Ç—ã PREMIUM –ú–æ–ª–æ–¥–∏–ª—å–Ω—ã–π –±–æ—Çüçé + –ö–ª—É–± –ö–û–¢:\n\n"
        "1 –º–µ—Å—è—Ü: 15$ ‚Äî 52 BYN / 41,2 GEL\n"
        "3 –º–µ—Å—è—Ü–∞: 39$ ‚Äî 136 BYN / 108 GEL\n"
        "6 –º–µ—Å—è—Ü–µ–≤: 80$ ‚Äî 279 BYN / 220 GEL\n"
        "12 –º–µ—Å—è—Ü–µ–≤: 160$ ‚Äî 556,8 BYN / 440 GEL\n\n"
        "2. –û–ø–ª–∞—á–∏–≤–∞–π—Ç–µ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º\n\n"
        "üáßüáæ–ë–µ–ª–∞—Ä—É—Å—å:\n"
        "1Ô∏è‚É£ –ï–†–ò–ü: –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —É—Å–ª—É–≥–∏ ‚Üí –ë–∞–Ω–∫–∏ –ù–ö–§–û ‚Üí –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫ ‚Üí 375256719780\n"
        "2Ô∏è‚É£ –° –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫ –ë–µ–ª–∞—Ä—É—Å–∏ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞: 375256719780\n"
        "3Ô∏è‚É£ –ü–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã: 9112 3880 0196 1148 (Ivan Karalko)\n\n"
        "üåç –î–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω:\n"
        "1Ô∏è‚É£ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞ –ì—Ä—É–∑–∏–∏ (TBC): 4315 7140 1661 1277 (Ivan Karalko)\n"
        "IBAN: GE92TB7398345064400010\n\n"
        "üíπ –ö—Ä–∏–ø—Ç–∞:\n"
        "USDT (TRC-20): TYnFwyLqhxfrwgjNpw5A9ANXKpLLCtcQYm\n"
        "Bybit UID: 15786723\n\n"
        "3. üì§ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ \"–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç\" –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç.\n"
        "–î–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Å—Ä–∞–∑—É –∏–ª–∏ –¥–æ 3 —á–∞—Å–æ–≤ –ø–æ—Å–ª–µ."
    )

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç", callback_data="upload_screenshot")],
            [InlineKeyboardButton(text="–ó–∞–∫—Ä—ã—Ç—å", callback_data="close")]
        ]
    )

    await callback.message.answer(text, reply_markup=keyboard)

@router.message(lambda message: message.text == "–ö–ª—É–± –ö–û–¢ üå∞")
async def club_kot(message: types.Message):
    text = (
        "–ö–ª—É–± –ö–û–¢ - —ç—Ç–æ —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª –¥–ª—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –Ω–∞ –≤—Å–µ —Ç–µ–ª–æ –∏ –ª–µ–∫—Ü–∏—è–º–∏ –ø—Ä–æ –∑–¥–æ—Ä–æ–≤—å–µ –∏ –ø–∏—Ç–∞–Ω–∏–µ. –ö–û–¢ –∑–∞–∫—Ä–æ–µ—Ç –≤—Å–µ —Ç–≤–æ–∏ –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–∏ –≤ —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –Ω–∞–≥—Ä—É–∑–∫–µ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –∏–º–µ—Ç—å —Å–µ–∫—Å—É–∞–ª—å–Ω–æ–µ –∏ –∑–¥–æ—Ä–æ–≤–æ–µ —Ç–µ–ª–æ –≤ –ª—é–±–æ–º –≤–æ–∑—Ä–∞—Å—Ç–µ, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –æ—Å–∞–Ω–∫—É –∏ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –≥–æ—Ä–∞–∑–¥–æ –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–∏.\n"
        "–ß—Ç–æ –≤—Ö–æ–¥–∏—Ç?\n"
        "‚Ä¢ 3 —Å–∏–ª–æ–≤—ã–µ –π–æ–≥–∏ –≤ –Ω–µ–¥–µ–ª—é –≤ –ø—Ä—è–º–æ–º —ç—Ñ–∏—Ä–µ.\n"
        "‚Ä¢ –ó–∞–ø–∏—Å–∏ –≤—Å–µ—Ö —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –æ—Å—Ç–∞—é—Ç—Å—è –Ω–∞–≤—Å–µ–≥–¥–∞ –≤ –∫–∞–Ω–∞–ª–µ. –¢–∞–º —É–∂–µ –±–æ–ª–µ–µ 73! —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫ –≥–¥–µ –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (15, 40, 60, 80 –º–∏–Ω—É—Ç), –∞ —Ç–∞–∫–∂–µ —É—Ä–æ–≤–Ω–∏ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∏ –∞–∫—Ü–µ–Ω—Ç –Ω–∞ –Ω–æ–≥–∏, –ø–æ–ø—É –∏ –ø—Ä–æ—á.\n"
        "‚Ä¢ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ –∫–æ—Ä–æ—Ç–∫–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ (15‚Äì20 –º–∏–Ω).\n"
        "‚Ä¢ –õ–µ–∫—Ü–∏–∏: –ø–∏—Ç–∞–Ω–∏–µ, –ø–æ—Ö—É–¥–µ–Ω–∏–µ, —Ä–µ—Ü–µ–ø—Ç—ã, –¥–æ–±–∞–≤–∫–∏.\n"
        "‚Ä¢ –†–∞–∑–±–æ—Ä –∞–Ω–∞–ª–∏–∑–æ–≤ —Ä–∞–∑ –≤ –º–µ—Å—è—Ü.\n"
        "‚Ä¢ –ö–æ–º—å—é–Ω–∏—Ç–∏ –∂–µ–Ω—â–∏–Ω —Å üî• —ç–Ω–µ—Ä–≥–∏–µ–π.\n"
        "–¢—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –ø—Ä–æ–≤–æ–¥–∏—Ç —Å–∞–º—ã–π –º–æ—â–Ω—ã–π –∏ –º–æ—Ç–∏–≤–∏—Ä—É—é—â–∏–π —Ç—Ä–µ–Ω–µ—Ä —É –∫–æ—Ç–æ—Ä–æ–≥–æ —è —Å–∞–º –∑–∞–Ω–∏–º–∞—é—Å—å - –°–∞–±–∏–Ω–∞üî•\n\n"

        "–¢–∞—Ä–∏—Ñ—ã –Ω–∞ PREMIUM –º–æ–ª–æ–¥–∏–ª—å–Ω–æ–≥–æ –±–æ—Ç–∞üçé + –∫–ª—É–± –ö–û–¢\n\n"

        "1 –º–µ—Å—è—Ü: 15$ ‚Äî 52 BYN / 41,2 GEL\n"
        "3 –º–µ—Å—è—Ü–∞: 39$ ‚Äî 136 BYN / 108 GEL\n"
        "6 –º–µ—Å—è—Ü–µ–≤: 80$ ‚Äî 279 BYN / 220 GEL\n"
        "12 –º–µ—Å—è—Ü–µ–≤: 160$ ‚Äî 556,8 BYN / 440 GEL\n"
    )
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–û–ø–ª–∞—Ç–∏—Ç—å", callback_data="payment")]
        ]
    )

    await message.answer(text, reply_markup=keyboard)

@router.message(lambda message: message.text == "–°—Ç–æ–∏–º–æ—Å—Ç—å/–æ–ø–ª–∞—Ç–∞")
async def payment_info(message: types.Message):
    text = (
        "1. –í—ã–±–∏—Ä–∞–π—Ç–µ –ø–µ—Ä–∏–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –æ–ø–ª–∞—á–∏–≤–∞–π—Ç–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é —Å—É–º–º—É\n\n"
        "–¢–∞—Ä–∏—Ñ—ã –Ω–∞ PREMIUM-–¥–æ—Å—Ç—É–ø –≤ –ú–æ–ª–æ–¥–∏–ª—å–Ω—ã–π –±–æ—Çüçé:\n\n"
        "1 –º–µ—Å—è—Ü: 10$ ‚Äî 34,8 BYN / 27,5 GEL\n"
        "3 –º–µ—Å—è—Ü–∞: 27$ ‚Äî 93 BYN / 75 GEL\n"
        "6 –º–µ—Å—è—Ü–µ–≤: 50$ ‚Äî 174 BYN / 138 GEL\n"
        "12 –º–µ—Å—è—Ü–µ–≤: 90$ ‚Äî 313 BYN / 248 GEL\n\n"
        "–ü–∞–∫–µ—Ç—ã PREMIUM –ú–æ–ª–æ–¥–∏–ª—å–Ω—ã–π –±–æ—Çüçé + –ö–ª—É–± –ö–û–¢:\n\n"
        "1 –º–µ—Å—è—Ü: 15$ ‚Äî 52 BYN / 41,2 GEL\n"
        "3 –º–µ—Å—è—Ü–∞: 39$ ‚Äî 136 BYN / 108 GEL\n"
        "6 –º–µ—Å—è—Ü–µ–≤: 80$ ‚Äî 279 BYN / 220 GEL\n"
        "12 –º–µ—Å—è—Ü–µ–≤: 160$ ‚Äî 556,8 BYN / 440 GEL\n\n"
        "2. –û–ø–ª–∞—á–∏–≤–∞–π—Ç–µ –ø–æ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞–º\n\n"
        "üáßüáæ–ë–µ–ª–∞—Ä—É—Å—å:\n"
        "1Ô∏è‚É£ –ï–†–ò–ü: –ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ —É—Å–ª—É–≥–∏ ‚Üí –ë–∞–Ω–∫–∏ –ù–ö–§–û ‚Üí –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫ ‚Üí 375256719780\n"
        "2Ô∏è‚É£ –° –ê–ª—å—Ñ–∞-–ë–∞–Ω–∫ –ë–µ–ª–∞—Ä—É—Å–∏ –ø–æ –Ω–æ–º–µ—Ä—É —Ç–µ–ª–µ—Ñ–æ–Ω–∞: 375256719780\n"
        "3Ô∏è‚É£ –ü–æ –Ω–æ–º–µ—Ä—É –∫–∞—Ä—Ç—ã: 9112 3880 0196 1148 (Ivan Karalko)\n\n"
        "üåç –î–ª—è –¥—Ä—É–≥–∏—Ö —Å—Ç—Ä–∞–Ω:\n"
        "1Ô∏è‚É£ –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞ –ì—Ä—É–∑–∏–∏ (TBC): 4315 7140 1661 1277 (Ivan Karalko)\n"
        "IBAN: GE92TB7398345064400010\n\n"
        "üíπ –ö—Ä–∏–ø—Ç–∞:\n"
        "USDT (TRC-20): TYnFwyLqhxfrwgjNpw5A9ANXKpLLCtcQYm\n"
        "Bybit UID: 15786723\n\n"
        "3. üì§ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ \"–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç\" –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç.\n"
        "–î–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è —Å—Ä–∞–∑—É –∏–ª–∏ –¥–æ 3 —á–∞—Å–æ–≤ –ø–æ—Å–ª–µ."
        "‚ö†Ô∏è–ï—Å–ª–∏ –Ω—É–∂–Ω–∞ –ø–æ–º–æ—â—å - –ø–∏—à–∏ –Ω–∞–º –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É @poddergkako ‚ö†Ô∏è"
    )

    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç", callback_data="upload_screenshot")],
            [InlineKeyboardButton(text="–ó–∞–∫—Ä—ã—Ç—å", callback_data="close")]
        ]
    )

    await message.answer(text, reply_markup=keyboard)

@router.message(lambda message: message.text == "–ù–∞–∑–∞–¥")
async def go_back(message: types.Message):
    await message.answer("–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu)

@router.message(lambda message: message.text == "–ó–∞–≥—Ä—É–∑–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç")
async def upload_screenshot(message: types.Message):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –æ–ø–ª–∞—Ç—ã –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:")

@router.message(lambda message: message.text == "–û—Ç–∑—ã–≤—ã")
async def upload_screenshot(message: types.Message):
    text = (
        "üôèüèº–û—Ç–∑—ã–≤—ã –æ–±–æ –º–Ω–µ –∫–∞–∫ –æ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–µ –º–æ–∂–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤ –∞–∫—Ç—É–∞–ª—å–Ω–æ–º —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º \"–û–¢–ó–´–í–´\" –≤ –º–æ–µ–º –ò–Ω—Å—Ç–∞–≥—Ä–∞–º –ø–æ —Å—Å—ã–ª–∫–µ: \n\n" 
        "https://www.instagram.com/cosmetic.man/"
    )
    await message.answer(text)

@router.message(F.photo)
async def handle_photo(message: types.Message):
    user_id = message.from_user.id
    photo_id = message.photo[-1].file_id

    await message.bot.send_message(
        ADMIN_CHANNEL_ID,
        f"–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –ø–æ–¥–ø–∏—Å–∫—É –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n\n"
        f"–ò–º—è: {message.from_user.full_name}\n"
        f"ID: {user_id}\n\n"
    )
    await message.bot.send_photo(ADMIN_CHANNEL_ID, photo=photo_id)

    await message.answer("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã. –ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –∏–ª–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 3 —á–∞—Å–æ–≤.")

    durations = [
        ("PR 1 –º–µ—Å", "sub_1_month"),
        ("PR 3 –º–µ—Å", "sub_3_months"),
        ("PR 6 –º–µ—Å", "sub_6_months"),
        ("PR 12 –º–µ—Å", "sub_12_months"),
        ("PR+–ö–û–¢ 1 –º–µ—Å", "sub_1_month_cat"),
        ("PR+–ö–û–¢ 3 –º–µ—Å", "sub_3_months_cat"),
        ("PR+–ö–û–¢ 6 –º–µ—Å", "sub_6_months_cat"),
        ("PR+–ö–û–¢ 12 –º–µ—Å", "sub_12_months_cat"),
    ]

    keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text=durations[i][0], callback_data=f"{durations[i][1]}:{user_id}"),
            InlineKeyboardButton(text=durations[i + 1][0], callback_data=f"{durations[i + 1][1]}:{user_id}")
        ]
        for i in range(0, len(durations), 2) 
        ]
    )

    await message.bot.send_message(ADMIN_CHANNEL_ID, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –ø–æ–¥–ø–∏—Å–∫–∏:", reply_markup=keyboard)

@router.callback_query(lambda c: c.message.chat.id == int(ADMIN_CHANNEL_ID))
async def handle_subscription_choice(callback: CallbackQuery):
    data = callback.data.split(":") 
    choice, user_id = data[0], int(data[1]) 

    durations = {
        "sub_1_month": 30,
        "sub_3_months": 90,
        "sub_6_months": 180,
        "sub_12_months": 365,
        "sub_1_month_cat": 30,
        "sub_3_months_cat": 90,
        "sub_6_months_cat": 180,
        "sub_12_months_cat": 365
    }
    days = durations.get(choice, 30)
    expiration_date = datetime.now() + timedelta(days=days)

    subscriptions[user_id] = expiration_date

    if "cat" in choice: 
        is_cat_subscriber = True
        channel_ids = [CHANNEL_ID_1, CHANNEL_ID_3, CHANNEL_ID_2]
        channel_descriptions = [
            "1Ô∏è‚É£–ö—É—Ä—Å \"—ç—Å—Ç–µ—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ–π–ø–∏—Ä–æ–≤–∞–Ω–∏–µ\"",
            "2Ô∏è‚É£–ö—É—Ä—Å INSTASKIN —Å —Å–∞–º–æ–º–∞—Å—Å–∞–∂–∞–º–∏ –∏ –∏—Å—á–µ—Ä–ø—ã–≤–∞—é—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–º –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–±—Ä–∞—Ç—å –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–æ–º–∞—à–Ω–∏–º —É—Ö–æ–¥–æ–º",
            "4Ô∏è‚É£–ö–ª—É–± –ö–û–¢ —Å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞–º–∏"
        ]
    else:
        is_cat_subscriber = False
        channel_ids = [CHANNEL_ID_1, CHANNEL_ID_3]
        channel_descriptions = [
            "1Ô∏è‚É£–ö—É—Ä—Å \"—ç—Å—Ç–µ—Ç–∏—á–µ—Å–∫–æ–µ —Ç–µ–π–ø–∏—Ä–æ–≤–∞–Ω–∏–µ\"",
            "2Ô∏è‚É£–ö—É—Ä—Å INSTASKIN —Å —Å–∞–º–æ–º–∞—Å—Å–∞–∂–∞–º–∏ –∏ –∏—Å—á–µ—Ä–ø—ã–≤–∞—é—â–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–º –∫–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –≤—ã–±—Ä–∞—Ç—å –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–æ–º–∞—à–Ω–∏–º —É—Ö–æ–¥–æ–º"
        ]

    invite_links = []
    for channel_id in channel_ids:
        invite_link = await generate_invite_link(channel_id)
        invite_links.append(invite_link)

    static_text = "3Ô∏è‚É£–ß–∞—Ç –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏ –∏ –ø–æ–º–æ—â–∏ –≤ –æ—Å–≤–æ–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ —Å –ö–æ—Ä–æ–ª—å–∫–æ –ò–≤–∞–Ω–æ–º - https://t.me/+4Lby-7srbjBhOGMy"

    invite_links_text = "\n".join(
        [f"{desc} - {link}" for desc, link in zip(channel_descriptions, invite_links[:2])]
    )
    invite_links_text += f"\n{static_text}\n"
    invite_links_text += "\n".join(
        [f"{desc} - {link}" for desc, link in zip(channel_descriptions[2:], invite_links[2:])]
    )

    await callback.bot.send_message(
        user_id,
        f"–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –¥–æ {expiration_date.strftime('%d.%m.%Y')}.\n"
        f"–í–æ—Ç –≤–∞—à–∏ —Å—Å—ã–ª–∫–∏ –¥–ª—è –¥–æ—Å—Ç—É–ø–∞. –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –≤—Å–µ:\n"
        f"{invite_links_text}"
    )

    await callback.message.answer(f"–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ {days} –¥–Ω–µ–π —É—Å–ø–µ—à–Ω–æ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}.")

    await callback.message.edit_reply_markup(reply_markup=None)

    asyncio.create_task(schedule_reminders_and_removal(user_id, expiration_date, is_cat_subscriber))

    await callback.answer("–ü–æ–¥–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–∞.")

async def schedule_reminders_and_removal(user_id, expiration_date, is_cat_subscriber=False):
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∏ —É–¥–∞–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –≥—Ä—É–ø–ø—ã –ø–æ—Å–ª–µ –∏—Å—Ç–µ—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏.
    :param user_id: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param expiration_date: –î–∞—Ç–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
    :param is_cat_subscriber: –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –ö–û–¢ (True) –∏–ª–∏ –æ–±—ã—á–Ω–∞—è (False)
    """
    reminders = [5, 3, 1] 
    for days_before in reminders:
        reminder_time = expiration_date - timedelta(days=days_before)
        wait_time = (reminder_time - datetime.now()).total_seconds()
        if wait_time > 0:
            await asyncio.sleep(wait_time)
            await bot.send_message(
                user_id,
                f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ {days_before} –¥–µ–Ω—å(–¥–Ω–µ–π). –ù–∞–∂–º–∏—Ç–µ '–û–ø–ª–∞—Ç–∞' –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è.",
                reply_markup=ReplyKeyboardMarkup(
                    keyboard=[[KeyboardButton(text="–û–ø–ª–∞—Ç–∞")]],
                    resize_keyboard=True
                )
            )

    wait_time = (expiration_date - datetime.now()).total_seconds()
    if wait_time > 0:
        await asyncio.sleep(wait_time)

    channels_to_remove = [CHANNEL_ID_1, CHANNEL_ID_2, CHANNEL_ID_3] if is_cat_subscriber else [CHANNEL_ID_1, CHANNEL_ID_3]
    for channel_id in channels_to_remove:
        try:
            await bot.kick_chat_member(chat_id=channel_id, user_id=user_id)
            await bot.send_message(user_id, f"–í—ã –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã –∏–∑ –≥—Ä—É–ø–ø—ã {channel_id} –∏–∑-–∑–∞ –∏—Å—Ç–µ—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏.")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} –∏–∑ –∫–∞–Ω–∞–ª–∞ {channel_id}: {e}")

async def generate_invite_link(channel_id: int):
    invite_link = await bot.create_chat_invite_link(chat_id=channel_id, member_limit=1)  
    return invite_link.invite_link

async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
